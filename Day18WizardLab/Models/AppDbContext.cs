// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Day18WizardLab.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext()
    {
    }

    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AssetManagement> AssetManagements { get; set; }

    public virtual DbSet<Attendance> Attendances { get; set; }

    public virtual DbSet<BenefitsCompensation> BenefitsCompensations { get; set; }

    public virtual DbSet<Candidate> Candidates { get; set; }

    public virtual DbSet<DisciplinaryAction> DisciplinaryActions { get; set; }

    public virtual DbSet<DocumentManagement> DocumentManagements { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Employee_Training> Employee_Trainings { get; set; }

    public virtual DbSet<HRNeedRequest> HRNeedRequests { get; set; }

    public virtual DbSet<Interview> Interviews { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<Leave> Leaves { get; set; }

    public virtual DbSet<LeaveType> LeaveTypes { get; set; }

    public virtual DbSet<LkpGeneralDataBranch> LkpGeneralDataBranches { get; set; }

    public virtual DbSet<LkpGeneralDataCompanyProfile> LkpGeneralDataCompanyProfiles { get; set; }

    public virtual DbSet<LkpHRDepartment> LkpHRDepartments { get; set; }

    public virtual DbSet<Offboarding> Offboardings { get; set; }

    public virtual DbSet<Onboarding> Onboardings { get; set; }

    public virtual DbSet<PerformanceEvaluation> PerformanceEvaluations { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<Project_Assignment> Project_Assignments { get; set; }

    public virtual DbSet<Recruiter> Recruiters { get; set; }

    public virtual DbSet<RecruitmentPortal> RecruitmentPortals { get; set; }

    public virtual DbSet<Salary> Salaries { get; set; }

    public virtual DbSet<SelfServiceRequest> SelfServiceRequests { get; set; }

    public virtual DbSet<Survey> Surveys { get; set; }

    public virtual DbSet<Survey_Response> Survey_Responses { get; set; }

    public virtual DbSet<Training> Training { get; set; }

    public virtual DbSet<User> Users { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=SAYEDHAWAS\\DEPI2025R3G2;Initial Catalog=HRSystem;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AssetManagement>(entity =>
        {
            entity.HasKey(e => e.AssetID).HasName("PK__AssetMan__4349237249313F21");

            entity.Property(e => e.AssetID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Attendance>(entity =>
        {
            entity.HasKey(e => e.AttendanceID).HasName("PK__Attendan__8B69263C7A181BF5");

            entity.Property(e => e.AttendanceID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithMany(p => p.Attendances).HasConstraintName("FK_Attendance_Employee");
        });

        modelBuilder.Entity<BenefitsCompensation>(entity =>
        {
            entity.HasKey(e => e.BenefitID).HasName("PK__Benefits__5754C53AA0F2320E");

            entity.Property(e => e.BenefitID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Candidate>(entity =>
        {
            entity.HasKey(e => e.CandidateID).HasName("PK__Candidat__DF539BFC5B599B38");

            entity.Property(e => e.CandidateID).ValueGeneratedNever();
        });

        modelBuilder.Entity<DisciplinaryAction>(entity =>
        {
            entity.HasKey(e => e.ActionID).HasName("PK__Discipli__FFE3F4B9CAA6FA8A");

            entity.Property(e => e.ActionID).ValueGeneratedNever();
        });

        modelBuilder.Entity<DocumentManagement>(entity =>
        {
            entity.HasKey(e => e.DocumentID).HasName("PK__Document__1ABEEF6FC143676C");

            entity.Property(e => e.DocumentID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeID).HasName("PK__Employee__7AD04FF17BB5A763");

            entity.Property(e => e.EmployeeID).ValueGeneratedNever();

            entity.HasOne(d => d.Department).WithMany(p => p.Employees).HasConstraintName("FK_Employee_LkpHRDepartments");

            entity.HasOne(d => d.Job).WithMany(p => p.Employees).HasConstraintName("FK_Employee_Job");
        });

        modelBuilder.Entity<Employee_Training>(entity =>
        {
            entity.HasKey(e => new { e.EmployeeID, e.TrainingID }).HasName("PK__Employee__445D3E2F8BB5F4D3");

            entity.HasOne(d => d.Employee).WithMany(p => p.Employee_Trainings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Employee_Training_Employee");

            entity.HasOne(d => d.Training).WithMany(p => p.Employee_Trainings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Employee___Train__44FF419A");
        });

        modelBuilder.Entity<HRNeedRequest>(entity =>
        {
            entity.Property(e => e.DepartmentId).IsFixedLength();
            entity.Property(e => e.Id).IsFixedLength();
            entity.Property(e => e.Qunatity).IsFixedLength();
            entity.Property(e => e.Title).IsFixedLength();
        });

        modelBuilder.Entity<Interview>(entity =>
        {
            entity.HasKey(e => e.InterviewID).HasName("PK__Intervie__C97C5832BDEC7F2F");

            entity.Property(e => e.InterviewID).ValueGeneratedNever();

            entity.HasOne(d => d.Candidate).WithMany(p => p.Interviews).HasConstraintName("FK__Interview__Candi__300424B4");

            entity.HasOne(d => d.Recruiter).WithMany(p => p.Interviews).HasConstraintName("FK__Interview__Recru__30F848ED");
        });

        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.JobID).HasName("PK__Job__056690E2112F1A8A");

            entity.Property(e => e.JobID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Leave>(entity =>
        {
            entity.HasKey(e => e.StartDate).HasName("PK__Leave__796DB97974021ABD");

            entity.HasOne(d => d.Employee).WithMany(p => p.Leaves).HasConstraintName("FK_Leave_Employee");

            entity.HasOne(d => d.LeaveType).WithMany(p => p.Leaves).HasConstraintName("FK_Leave_LeaveTypes");
        });

        modelBuilder.Entity<LkpGeneralDataBranch>(entity =>
        {
            entity.HasOne(d => d.Company).WithMany(p => p.LkpGeneralDataBranches)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LkpGeneralDataBranches_LkpGeneralDataCompanyProfiles");
        });

        modelBuilder.Entity<LkpHRDepartment>(entity =>
        {
            entity.HasKey(e => e.DepartmentId).HasName("PK_LkpDepartments");

            entity.HasOne(d => d.Branch).WithMany(p => p.LkpHRDepartments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LkpHRDepartments_LkpGeneralDataBranches");
        });

        modelBuilder.Entity<Offboarding>(entity =>
        {
            entity.HasKey(e => e.ExitID).HasName("PK__Offboard__26D64E980151480B");

            entity.Property(e => e.ExitID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Onboarding>(entity =>
        {
            entity.HasKey(e => e.OnboardingID).HasName("PK__Onboardi__43F2371EEC6966B4");

            entity.Property(e => e.OnboardingID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithMany(p => p.Onboardings).HasConstraintName("FK_Onboarding_Employee");
        });

        modelBuilder.Entity<PerformanceEvaluation>(entity =>
        {
            entity.HasKey(e => e.EvaluationID).HasName("PK__Performa__36AE68D3AB121FE0");

            entity.Property(e => e.EvaluationID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithMany(p => p.PerformanceEvaluations).HasConstraintName("FK_PerformanceEvaluation_Employee");
        });

        modelBuilder.Entity<Project>(entity =>
        {
            entity.HasKey(e => e.ProjectID).HasName("PK__Project__761ABED05EFE500B");

            entity.Property(e => e.ProjectID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Project_Assignment>(entity =>
        {
            entity.HasKey(e => new { e.EmployeeID, e.ProjectID }).HasName("PK__Project___6DB1E41C55EAB089");

            entity.HasOne(d => d.Employee).WithMany(p => p.Project_Assignments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Project_Assignment_Employee");

            entity.HasOne(d => d.Project).WithMany(p => p.Project_Assignments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Project_A__Proje__68487DD7");
        });

        modelBuilder.Entity<Recruiter>(entity =>
        {
            entity.HasKey(e => e.RecruiterID).HasName("PK__Recruite__219CFF769E2FFE8E");

            entity.Property(e => e.RecruiterID).ValueGeneratedNever();
        });

        modelBuilder.Entity<RecruitmentPortal>(entity =>
        {
            entity.HasKey(e => e.PortalID).HasName("PK__Recruitm__B87D5833CC195485");

            entity.Property(e => e.PortalID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Salary>(entity =>
        {
            entity.HasKey(e => e.SalaryID).HasName("PK__Salary__4BE204B756FFE35A");

            entity.Property(e => e.SalaryID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithMany(p => p.Salaries).HasConstraintName("FK_Salary_Employee");
        });

        modelBuilder.Entity<SelfServiceRequest>(entity =>
        {
            entity.HasKey(e => e.RequestID).HasName("PK__SelfServ__33A8519A129505BF");

            entity.Property(e => e.RequestID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Survey>(entity =>
        {
            entity.HasKey(e => e.SurveyID).HasName("PK__Survey__A5481F9DA81342FB");

            entity.Property(e => e.SurveyID).ValueGeneratedNever();
        });

        modelBuilder.Entity<Survey_Response>(entity =>
        {
            entity.HasKey(e => e.ResponseID).HasName("PK__Survey_R__1AAA640CFE9129E2");

            entity.Property(e => e.ResponseID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithMany(p => p.Survey_Responses).HasConstraintName("FK_Survey_Response_Employee");

            entity.HasOne(d => d.Survey).WithMany(p => p.Survey_Responses).HasConstraintName("FK__Survey_Re__Surve__6D0D32F4");
        });

        modelBuilder.Entity<Training>(entity =>
        {
            entity.HasKey(e => e.TrainingID).HasName("PK__Training__E8D71DE278A5F70D");

            entity.Property(e => e.TrainingID).ValueGeneratedNever();
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__User__1788CCAC2EB55247");

            entity.Property(e => e.UserID).ValueGeneratedNever();

            entity.HasOne(d => d.Employee).WithOne(p => p.User)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_User_Employee");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}